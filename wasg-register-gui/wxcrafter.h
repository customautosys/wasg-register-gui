//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _WASG_REGISTER_GUI_WASG_REGISTER_GUI_WXCRAFTER_BASE_CLASSES_H
#define _WASG_REGISTER_GUI_WASG_REGISTER_GUI_WXCRAFTER_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/gbsizer.h>
#include <wx/notebook.h>
#include <wx/panel.h>
#include <wx/imaglist.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/datectrl.h>
#include <wx/checkbox.h>
#include <wx/choice.h>
#include <wx/arrstr.h>
#include <wx/statbmp.h>
#include <wx/button.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class MainFrameBaseClass : public wxFrame
{
protected:
	wxNotebook* optionsNotebook;
	wxPanel* basicOptions;
	wxStaticText* phoneNumberLabel;
	wxTextCtrl* phoneNumber;
	wxStaticText* birthdateLabel;
	wxDatePickerCtrl* birthdate;
	wxCheckBox* retrieveModeOnly;
	wxStaticText* retrieveModeOnlyLabel;
	wxPanel* advancedOptions;
	wxStaticText* ispLabel;
	wxChoice* isp;
	wxStaticText* salutationLabel;
	wxTextCtrl* salutation;
	wxStaticText* nameLabel;
	wxTextCtrl* name;
	wxStaticText* genderLabel;
	wxTextCtrl* gender;
	wxStaticText* countryLabel;
	wxTextCtrl* country;
	wxStaticText* emailLabel;
	wxTextCtrl* email;
	wxStaticText* transactionIdLabel;
	wxTextCtrl* transactionId;
	wxStaticText* registrationPhaseOnlyLabel;
	wxCheckBox* registrationPhaseOnly;
	wxStaticText* otpLabel;
	wxTextCtrl* otp;
	wxStaticText* successCodeLabel;
	wxTextCtrl* successCode;
	wxStaticText* decryptionDateLabel;
	wxDatePickerCtrl* decryptionDate;
	wxStaticText* verboseLabel;
	wxCheckBox* verbose;
	wxPanel* about;
	wxStaticBitmap* iconCas;
	wxTextCtrl* textCas;
	wxPanel* credentials;
	wxStaticText* userIDLabel;
	wxTextCtrl* userID;
	wxStaticText* passwordLabel;
	wxTextCtrl* password;
	wxButton* registerButton;

protected:
	virtual void OnIdle(wxIdleEvent& event)
	{
		event.Skip();
	}
	virtual void OnActivate(wxActivateEvent& event)
	{
		event.Skip();
	}
	virtual void OnRegisterButtonClicked(wxCommandEvent& event)
	{
		event.Skip();
	}

public:
	wxStaticText* GetPhoneNumberLabel()
	{
		return phoneNumberLabel;
	}
	wxTextCtrl* GetPhoneNumber()
	{
		return phoneNumber;
	}
	wxStaticText* GetBirthdateLabel()
	{
		return birthdateLabel;
	}
	wxDatePickerCtrl* GetBirthdate()
	{
		return birthdate;
	}
	wxCheckBox* GetRetrieveModeOnly()
	{
		return retrieveModeOnly;
	}
	wxStaticText* GetRetrieveModeOnlyLabel()
	{
		return retrieveModeOnlyLabel;
	}
	wxPanel* GetBasicOptions()
	{
		return basicOptions;
	}
	wxStaticText* GetIspLabel()
	{
		return ispLabel;
	}
	wxChoice* GetIsp()
	{
		return isp;
	}
	wxStaticText* GetSalutationLabel()
	{
		return salutationLabel;
	}
	wxTextCtrl* GetSalutation()
	{
		return salutation;
	}
	wxStaticText* GetNameLabel()
	{
		return nameLabel;
	}
	wxTextCtrl* GetName()
	{
		return name;
	}
	wxStaticText* GetGenderLabel()
	{
		return genderLabel;
	}
	wxTextCtrl* GetGender()
	{
		return gender;
	}
	wxStaticText* GetCountryLabel()
	{
		return countryLabel;
	}
	wxTextCtrl* GetCountry()
	{
		return country;
	}
	wxStaticText* GetEmailLabel()
	{
		return emailLabel;
	}
	wxTextCtrl* GetEmail()
	{
		return email;
	}
	wxStaticText* GetTransactionIdLabel()
	{
		return transactionIdLabel;
	}
	wxTextCtrl* GetTransactionId()
	{
		return transactionId;
	}
	wxStaticText* GetRegistrationPhaseOnlyLabel()
	{
		return registrationPhaseOnlyLabel;
	}
	wxCheckBox* GetRegistrationPhaseOnly()
	{
		return registrationPhaseOnly;
	}
	wxStaticText* GetOtpLabel()
	{
		return otpLabel;
	}
	wxTextCtrl* GetOtp()
	{
		return otp;
	}
	wxStaticText* GetSuccessCodeLabel()
	{
		return successCodeLabel;
	}
	wxTextCtrl* GetSuccessCode()
	{
		return successCode;
	}
	wxStaticText* GetDecryptionDateLabel()
	{
		return decryptionDateLabel;
	}
	wxDatePickerCtrl* GetDecryptionDate()
	{
		return decryptionDate;
	}
	wxStaticText* GetVerboseLabel()
	{
		return verboseLabel;
	}
	wxCheckBox* GetVerbose()
	{
		return verbose;
	}
	wxPanel* GetAdvancedOptions()
	{
		return advancedOptions;
	}
	wxStaticBitmap* GetIconCas()
	{
		return iconCas;
	}
	wxTextCtrl* GetTextCas()
	{
		return textCas;
	}
	wxPanel* GetAbout()
	{
		return about;
	}
	wxStaticText* GetUserIDLabel()
	{
		return userIDLabel;
	}
	wxTextCtrl* GetUserID()
	{
		return userID;
	}
	wxStaticText* GetPasswordLabel()
	{
		return passwordLabel;
	}
	wxTextCtrl* GetPassword()
	{
		return password;
	}
	wxPanel* GetCredentials()
	{
		return credentials;
	}
	wxNotebook* GetOptionsNotebook()
	{
		return optionsNotebook;
	}
	wxButton* GetRegisterButton()
	{
		return registerButton;
	}
	MainFrameBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Wireless@SGX Linux Unofficial GUI Interface"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxCAPTION|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxSYSTEM_MENU|wxCLOSE_BOX);
	virtual ~MainFrameBaseClass();
};

#endif
